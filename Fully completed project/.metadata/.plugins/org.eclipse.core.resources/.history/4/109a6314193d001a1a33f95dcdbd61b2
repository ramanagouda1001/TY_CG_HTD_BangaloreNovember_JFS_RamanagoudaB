package com.capgemini.forestmanagements;

import static org.junit.jupiter.api.Assertions.*;

import java.io.FileReader;
import java.util.Properties;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import com.capgemini.forestmanagement.bean.Account;
import com.capgemini.forestmanagement.bean.Admin;
import com.capgemini.forestmanagement.dao.AdminDAOImpl;
import com.capgemini.forestmanagement.exception.ForestManagementException;
public class AdminTest {

	Account account=null;
	Admin admin=null;
	AdminDAOImpl obj=null;
	@BeforeEach
	void loadDriver()
	{
		FileReader reader;
		Properties prop;
		try {
			reader = new FileReader("db.properties");
			prop = new Properties();
			prop.load(reader);
			Class.forName(prop.getProperty("driver"));
		} catch (Exception e) {
			// TODO Auto-generated catch block
			System.out.println("hi");
		}
		obj=new AdminDAOImpl();
	}
	
	@Test
	void getAdminTest()//passed
	{
		admin=new Admin();
		admin.setName("Rohan@gmail.com");
		admin.setPassword("Ramubb143@");
		boolean flag=obj.getAdmin(admin);
		assertEquals(flag, true);
	}
	
	@Test
	void getAccountTest()//passed
	{
		boolean flag=obj.getAccount("Rohan@gmail.com", "Akki123@");
		assertEquals(flag,true);
	}

	@Test
	void addAccountTest()//passed
	{
		account=new Account();
		account.setUsername("Rohit@gmail.com");
		account.setPassword("Rohit123@");
		account.setRole("client");
		try {
			boolean flag=obj.addAccount(account);
			assertEquals(flag, true);
		}
		catch (Exception e) {
			assertThrows(ForestManagementException.class, () -> {
				obj.addAccount(account);
		});
		}
	}

	@Test
	void deleteAccountTest()//passed
	{
		account=new Account();
		account.setUsername("Rohit@gmail.com");
		account.setPassword("Rohit123@");
		boolean flag=obj.deleteAccount(account);
		if(flag==true)
			assertEquals(flag, true);
		else
			assertEquals(flag, false);
	}
	
	@Test
	void updateAccountTest()//passed
	{
		String newPassword="Akki123@";
		String oldPassword="Rohan@123";
		boolean flag=obj.updateAccount(newPassword, oldPassword);
		if(flag==true)
			assertEquals(flag, true);
		else
			assertEquals(flag, false);
	}
}
